

============================
"4-print_square.py" usage
============================

This module defines a square-printing function ``print_square(size)``.

Usage
=====

Function prints squares using the "#" character.
Parameter "size" defines both height and width.

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(2)
    ##
    ##
::

    >>> print_square(7)
    #######
    #######
    #######
    #######
    #######
    #######
    #######
	
::

    >>> print_square(4)
    ####
    ####
    ####
    ####
        

The function prints nothing when ``size`` is Zero "0"

::

    >>> print_square(0)

Invalid Sizes
=============

The ``size`` parameter must be an integer;
non-integer values will trigger a TypeError.

::

    >>> print_square("NOT an int")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(9.9)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

For ``size`` less than zero, a ValueError is raised.

::

    >>> print_square(-3)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Note that type-checking occurs before value-checking.

::

    >>> print_square(-4.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

Function invocation requires a minimum of one argument.

::

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
